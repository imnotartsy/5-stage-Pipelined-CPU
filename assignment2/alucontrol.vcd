$date
	Wed Oct  6 13:14:02 2021
$end
$version
	QuestaSim Version 10.7c
$end
$timescale
	1ns
$end
$scope module alucontrol_tb $end
$var wire 1 ! in_sig0 [1] $end
$var wire 1 " in_sig0 [0] $end
$var wire 1 # in_sig1 [10] $end
$var wire 1 $ in_sig1 [9] $end
$var wire 1 % in_sig1 [8] $end
$var wire 1 & in_sig1 [7] $end
$var wire 1 ' in_sig1 [6] $end
$var wire 1 ( in_sig1 [5] $end
$var wire 1 ) in_sig1 [4] $end
$var wire 1 * in_sig1 [3] $end
$var wire 1 + in_sig1 [2] $end
$var wire 1 , in_sig1 [1] $end
$var wire 1 - in_sig1 [0] $end
$var wire 1 . output_sig [3] $end
$var wire 1 / output_sig [2] $end
$var wire 1 0 output_sig [1] $end
$var wire 1 1 output_sig [0] $end
$scope module alucontrol_inst $end
$var wire 1 2 ALUOp [1] $end
$var wire 1 3 ALUOp [0] $end
$var wire 1 4 Opcode [10] $end
$var wire 1 5 Opcode [9] $end
$var wire 1 6 Opcode [8] $end
$var wire 1 7 Opcode [7] $end
$var wire 1 8 Opcode [6] $end
$var wire 1 9 Opcode [5] $end
$var wire 1 : Opcode [4] $end
$var wire 1 ; Opcode [3] $end
$var wire 1 < Opcode [2] $end
$var wire 1 = Opcode [1] $end
$var wire 1 > Opcode [0] $end
$var wire 1 ? Operation [3] $end
$var wire 1 @ Operation [2] $end
$var wire 1 A Operation [1] $end
$var wire 1 B Operation [0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
0!
02
0"
03
1#
14
1$
15
1%
16
1&
17
1'
18
1(
19
1)
1:
1*
1;
1+
1<
1,
1=
1-
1>
0.
0?
0/
0@
10
1A
01
0B
0.
0?
0/
0@
10
1A
01
0B
#20
1"
13
1/
1@
11
1B
#40
0$
05
0%
06
0&
07
0(
09
0+
0<
0,
0=
0-
0>
1!
12
0"
03
0/
0@
01
0B
#60
0!
02
1"
13
1/
1@
11
1B
#80
1$
15
1!
12
0"
03
01
0B
#100
0!
02
1"
13
11
1B
#120
0$
05
0*
0;
1!
12
0"
03
0/
0@
00
0A
01
0B
#140
0!
02
1"
13
1/
1@
10
1A
11
1B
#160
1%
16
1!
12
0"
03
0/
0@
00
0A
#180
0!
02
1"
13
1/
1@
10
1A
